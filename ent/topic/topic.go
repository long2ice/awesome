// Code generated by entc, DO NOT EDIT.

package topic

const (
	// Label holds the string label denoting the topic type in the database.
	Label = "topic"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldTopicCategoryID holds the string denoting the topic_category_id field in the database.
	FieldTopicCategoryID = "topic_category_id"
	// EdgeTopiccategory holds the string denoting the topiccategory edge name in mutations.
	EdgeTopiccategory = "topiccategory"
	// EdgeProjects holds the string denoting the projects edge name in mutations.
	EdgeProjects = "projects"
	// Table holds the table name of the topic in the database.
	Table = "topic"
	// TopiccategoryTable is the table that holds the topiccategory relation/edge.
	TopiccategoryTable = "topic"
	// TopiccategoryInverseTable is the table name for the TopicCategory entity.
	// It exists in this package in order to avoid circular dependency with the "topiccategory" package.
	TopiccategoryInverseTable = "topic_category"
	// TopiccategoryColumn is the table column denoting the topiccategory relation/edge.
	TopiccategoryColumn = "topic_category_id"
	// ProjectsTable is the table that holds the projects relation/edge.
	ProjectsTable = "project"
	// ProjectsInverseTable is the table name for the Project entity.
	// It exists in this package in order to avoid circular dependency with the "project" package.
	ProjectsInverseTable = "project"
	// ProjectsColumn is the table column denoting the projects relation/edge.
	ProjectsColumn = "topic_id"
)

// Columns holds all SQL columns for topic fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDescription,
	FieldTopicCategoryID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
